// Generated by CoffeeScript 1.9.2
define(['react', 'Navigation', 'AddPost', 'jquery', 'cookie', 'bootstrap'], function(React, Navigation, AddPost) {
  var App, Post, PostList, collection, current_user;
  collection = [];
  current_user = {};
  console.log('start App');
  Post = React.createClass({
    actionChangeContent: function(e) {
      var get_current_text;
      e.preventDefault();
      get_current_text = React.findDOMNode(this.refs.content).innerHTML;
      return console.log(this.props.model.author.username);
    },
    render: function() {
      if (this.props.popover === "hide") {
        return React.createElement("div", {
          "className": "col-xs-12 col-sm-6 col-md-4 col-lg-3"
        }, React.createElement("div", {
          "className": "well",
          "onClick": this.actionChangeContent
        }, React.createElement("h3", null, this.props.model.author.username), React.createElement("p", {
          "ref": "content"
        }, this.props.children)), React.createElement("div", {
          "className": this.props.popover + " popover fade left in"
        }, React.createElement("div", {
          "className": "arrow"
        }), React.createElement("h3", {
          "className": "popover-title"
        }, "A Title"), React.createElement("div", {
          "className": "popover-content"
        }, "And here\'s some amazing content. It\'s very engaging. right?")));
      } else {
        return React.createElement("div", {
          "className": "col-xs-12 col-sm-6 col-md-4 col-lg-3"
        }, React.createElement("div", {
          "className": "well",
          "onClick": this.actionChangeContent
        }, React.createElement("h3", null, this.props.model.author.username), React.createElement("p", {
          "ref": "content"
        }, this.props.children)));
      }
    }
  });
  PostList = React.createClass({
    render: function() {
      var items;
      items = this.props.collection.map(function(model, index) {
        return React.createElement(Post, {
          "model": model,
          "popover": "hide"
        }, model.content);
      });
      return React.createElement("div", {
        "className": "row"
      }, items);
    }
  });
  App = React.createClass({
    getInitialState: function() {
      return {
        collection: [],
        user: {},
        selectedIndex: 0
      };
    },
    componentDidMount: function() {
      $.ajax({
        url: 'api/v1/auth/current-user/',
        cache: false,
        success: (function(data) {
          this.setState({
            user: data
          });
          current_user = this.state.user;
        }).bind(this),
        error: (function(xhr, status, err) {
          console.log('error fetching current user');
        }).bind(this)
      });
      $.ajax({
        url: '/api/v1/posts/',
        dataType: 'json',
        cache: false,
        success: (function(data) {
          this.setState({
            collection: data
          });
        }).bind(this),
        error: (function(xhr, status, err) {
          console.log('error fetchin collection');
        }).bind(this)
      });
    },
    pushData: function(data) {
      this.state.collection.push({
        content: data.content,
        author: {
          username: this.state.user.username
        }
      });
      this.setState({
        collection: this.state.collection
      });
    },
    addPost: function(content) {
      var csrftoken, new_text;
      csrftoken = $.cookie('csrftoken');
      new_text = content;
      $.ajax({
        url: '/api/v1/posts/',
        method: 'POST',
        headers: {
          "X-CSRFToken": csrftoken
        },
        csrfmiddlewaretoken: csrftoken,
        data: {
          content: new_text
        },
        success: (function(data) {
          this.pushData(data);
        }).bind(this),
        error: (function() {
          console.log('error by adding post');
        }).bind(this)
      });
    },
    render: function() {
      return React.createElement("div", {
        "className": "app_container"
      }, React.createElement(Navigation, {
        "user": this.state.user
      }), React.createElement("div", {
        "className": "container-fluid"
      }, React.createElement("div", {
        "className": "row"
      }, React.createElement("div", {
        "className": "col-xs-12 col-md-3"
      }), React.createElement("div", {
        "className": "col-xs-12 col-md-9"
      }, React.createElement(PostList, {
        "collection": this.state.collection
      })))), React.createElement(AddPost, {
        "addPost": this.addPost
      }));
    }
  });
  React.render(React.createElement(App, null), document.getElementById('app'));
  return App;
});
